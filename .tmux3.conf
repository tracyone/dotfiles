# =================================================
# Author   :tracyone
# Url      :https://github.com/tracyone/dotfiles
# Email    :tracyone@live.cn
# =================================================

is_macos='uname | grep -qi Darwin'
is_linux='uname | grep -qi Linux'
no_display="test -z $DISPLAY"

# status bar
set -g status-interval 1
set -g status-justify right # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-right ''
set -g status-left '#(date +%D\ %%H:%%M:%%S)'
set -g status-style fg=white,bg=black
#Tab
setw -g window-status-current-format "#[bg=black]#[fg=brightred]*#I #[fg=brightred,bold]#[bg=black][#W]"
# default statusbar colors
set -g status-fg white
set -g status-bg default
# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set -g status-keys emacs

bind -r ( switch-client -p
bind -r ) switch-client -n

# resize pane
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5


# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# This allows using the mouse to resize panes; note that there is no change in
# mouse cursor when hover over a pane divider as one might expect (everything
# still works though).
##
#
#

setw -g mouse off


# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on


# Vi copypaste mode
set-window-option -g mode-keys vi

# os x
if-shell "$is_macos" 'bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "$is_macos" 'bind-key -Tcopy-mode-vi  Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "$is_macos" 'bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

# Linux
if-shell "$is_linux " 'bind-key -T copy-mode-vi 'y' send -X copy-pipe "xclip -sel clip -i"'

bind-key -T copy-mode-vi 'v' send -X begin-selection

if-shell "$no_display" 'bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel'



# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename
setw -g automatic-rename on # rename window to reflect current program
set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'


# color
set-option -ga terminal-overrides ",xterm-256color:Tc"
#set -g default-terminal "screen-256color"

# + and - now "zoom" in and out of a pane (e.i., temporarily maximize it)
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
bind _ last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

bind-key c-k confirm-before -p "Kill Session #S (y/n)?" "run-shell 'tmux switch-client -l \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'" 
# | and _ are now used for splitting windows into panes
unbind %
bind \\ split-window -h
bind - split-window -v

bind M setw -g mouse off \; display "Mouse OFF!" 
bind m setw -g mouse on \; display "Mouse ON!"

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n m-h if-shell "$is_vim" "send-keys m-h" "select-pane -L"
bind -n m-j if-shell "$is_vim" "send-keys m-j" "select-pane -D"
bind -n m-k if-shell "$is_vim" "send-keys m-k" "select-pane -U"
bind -n m-l if-shell "$is_vim" "send-keys m-l" "select-pane -R"
bind -n m-w if-shell "$is_vim" "send-keys m-w" "select-pane -l"

set -g @plugin 'tmux-plugins/tmux-resurrect'

run '~/.tmux/plugins/tpm/tpm'
